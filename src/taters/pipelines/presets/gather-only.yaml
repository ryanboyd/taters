# gather-only.yaml
#
# Collect previously generated feature CSVs into unified tables.
# - Dictionary + Archetypes: concatenate all files
# - Sentence/Whisper embeddings: aggregate per file by speaker (mean, std)

vars:
  overwrite_existing: false
  # You can override these at runtime with --var, or edit here:
  dict_dir: "features/dictionary"
  archetypes_dir: "features/archetypes"
  sent_emb_dir: "features/sentence-embeddings"
  whisper_emb_dir: "features/whisper-embeddings"

steps:
  # ---------- DICTIONARY (concat only) ----------
  - call: potato.helpers.feature_gather
    scope: global
    with:
      root_dir: "{{var:dict_dir}}"
      # no out_csv -> defaults to "<root_dir>.csv"
      aggregate: false
      overwrite_existing: "{{var:overwrite_existing}}"
    save_as: dict_merged

  # ---------- ARCHETYPES (concat only) ----------
  - call: potato.helpers.feature_gather
    scope: global
    with:
      root_dir: "{{var:archetypes_dir}}"
      aggregate: false
      overwrite_existing: "{{var:overwrite_existing}}"
    save_as: archetypes_merged

  # ---------- SENTENCE EMBEDDINGS (aggregate per file by speaker) ----------
  - call: potato.helpers.feature_gather
    scope: global
    with:
      root_dir: "{{var:sent_emb_dir}}"
      aggregate: false
      overwrite_existing: "{{var:overwrite_existing}}"
    save_as: sent_emb_merged

  # ---------- WHISPER EMBEDDINGS (aggregate per file by speaker) ----------
  - call: potato.helpers.feature_gather
    scope: global
    with:
      root_dir: "{{var:whisper_emb_dir}}"
      aggregate: true
      group_by: ["speaker"]
      per_file: true
      stats: ["mean"]
      exclude_cols: ["start_time", "end_time"]           # whisper segment CSVs have times; drop before stats
      overwrite_existing: "{{var:overwrite_existing}}"
    save_as: whisper_emb_merged
